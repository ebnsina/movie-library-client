/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as SigninImport } from './routes/signin'
import { Route as SearchImport } from './routes/search'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as AuthMoviesIndexImport } from './routes/_auth/movies/index'
import { Route as AuthMoviesNewImport } from './routes/_auth/movies/new'
import { Route as AuthMoviesIdEditImport } from './routes/_auth/movies/$id.edit'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const SigninRoute = SigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const SearchRoute = SearchImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthMoviesIndexRoute = AuthMoviesIndexImport.update({
  id: '/movies/',
  path: '/movies/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthMoviesNewRoute = AuthMoviesNewImport.update({
  id: '/movies/new',
  path: '/movies/new',
  getParentRoute: () => AuthRoute,
} as any)

const AuthMoviesIdEditRoute = AuthMoviesIdEditImport.update({
  id: '/movies/$id/edit',
  path: '/movies/$id/edit',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/_auth/movies/new': {
      id: '/_auth/movies/new'
      path: '/movies/new'
      fullPath: '/movies/new'
      preLoaderRoute: typeof AuthMoviesNewImport
      parentRoute: typeof AuthImport
    }
    '/_auth/movies/': {
      id: '/_auth/movies/'
      path: '/movies'
      fullPath: '/movies'
      preLoaderRoute: typeof AuthMoviesIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/movies/$id/edit': {
      id: '/_auth/movies/$id/edit'
      path: '/movies/$id/edit'
      fullPath: '/movies/$id/edit'
      preLoaderRoute: typeof AuthMoviesIdEditImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthMoviesNewRoute: typeof AuthMoviesNewRoute
  AuthMoviesIndexRoute: typeof AuthMoviesIndexRoute
  AuthMoviesIdEditRoute: typeof AuthMoviesIdEditRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthMoviesNewRoute: AuthMoviesNewRoute,
  AuthMoviesIndexRoute: AuthMoviesIndexRoute,
  AuthMoviesIdEditRoute: AuthMoviesIdEditRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/search': typeof SearchRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/movies/new': typeof AuthMoviesNewRoute
  '/movies': typeof AuthMoviesIndexRoute
  '/movies/$id/edit': typeof AuthMoviesIdEditRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/search': typeof SearchRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/movies/new': typeof AuthMoviesNewRoute
  '/movies': typeof AuthMoviesIndexRoute
  '/movies/$id/edit': typeof AuthMoviesIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/search': typeof SearchRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/_auth/movies/new': typeof AuthMoviesNewRoute
  '/_auth/movies/': typeof AuthMoviesIndexRoute
  '/_auth/movies/$id/edit': typeof AuthMoviesIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/search'
    | '/signin'
    | '/signup'
    | '/movies/new'
    | '/movies'
    | '/movies/$id/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/search'
    | '/signin'
    | '/signup'
    | '/movies/new'
    | '/movies'
    | '/movies/$id/edit'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/search'
    | '/signin'
    | '/signup'
    | '/_auth/movies/new'
    | '/_auth/movies/'
    | '/_auth/movies/$id/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  SearchRoute: typeof SearchRoute
  SigninRoute: typeof SigninRoute
  SignupRoute: typeof SignupRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  SearchRoute: SearchRoute,
  SigninRoute: SigninRoute,
  SignupRoute: SignupRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/search",
        "/signin",
        "/signup"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/movies/new",
        "/_auth/movies/",
        "/_auth/movies/$id/edit"
      ]
    },
    "/search": {
      "filePath": "search.tsx"
    },
    "/signin": {
      "filePath": "signin.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/_auth/movies/new": {
      "filePath": "_auth/movies/new.tsx",
      "parent": "/_auth"
    },
    "/_auth/movies/": {
      "filePath": "_auth/movies/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/movies/$id/edit": {
      "filePath": "_auth/movies/$id.edit.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
